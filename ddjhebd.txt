===================================tsconfig.json=== tsc --init
{
  "compilerOptions": {
      "module": "commonjs",
      "target": "ES6",
      "moduleResolution": "node", 
      "sourceMap": true,
      "declaration": false,
      "removeComments": false,
      "noImplicitAny": false,
      "skipLibCheck": true, n
      "esModuleInterop": true,
      "outDir": "jsfiles",
      "experimentalDecorators": true,
      "emitDecoratorMetadata": true
  },
  "exclude": [
      "node_modules"
  ]
}
========================= package.json========== npm init ========
{
  "name": "typescriptcucumberprotractor",
  "version": "1.0.0",
  "description": "",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "author": "",
  "license": "ISC",
  "devDependencies": {
    "@types/typescript": "^2.0.0",
    "protractor": "^7.0.0",
    "typescript": "^5.0.4"
  },
  "dependencies": {
    "@types/cucumber": "^7.0.0",
    "@types/jasmine": "^4.3.1",
    "@types/node": "^18.16.0",
    "cucumber": "^6.0.7",
    "jasmine": "^4.6.0",
    "node": "^19.8.1",
    "protractor-cucumber-framework": "^9.2.0"
ts-node for executing typescript

  }
}
================================================conf.ts=========
import { Config, browser } from "protractor";

export const config: Config = {
    SELENIUM_PROMISE_MANAGER: false,
    directConnect: true,
    capabilities: {
        browserName: "chrome",
    },
    onPrepare: async () => {
        await browser.waitForAngularEnabled(false);
        await browser.manage().window().maximize();
        //fsExtra.emptyDirSync("./CucumberReport/");
    },
    beforeLaunch: function () {
        require('ts-node/register')
    },
    framework: "custom",
    frameworkPath: require.resolve("protractor-cucumber-framework"),
    specs: [
        '../features/*.feature'],
    cucumberOpts: {
        require: ["./stepdefinations/step.js"],
        strict: true,
    },
    jasmineNodeOpts: {
        defaultTimeoutInterval: 60000,
        // Set the default timeout to 60 seconds
        getPageTimeout: 60000, // Set the timeout for loading a page to 30 seconds
        allScriptsTimeout: 60000 // Set the timeout for executing scripts to 60 seconds
    },
};

ctrl shift p
ctrl d
8888888888888888888888888****************88
setDefaultTimeout(60000);
browser.manage().timeouts().implicitlyWait(20000);
 jasmineNodeOpts: {
        defaultTimeoutInterval: 60000,// Set the default timeout to 60 seconds
        getPageTimeout: 600000, // Set the timeout for loading a page to 30 seconds
        allScriptsTimeout: 60000 // Set the timeout for executing scripts to 60 seconds    
    },
*****************************************************************
specs: [
        '../features/'],
    cucumberOpts: {
        require: ["./stepdefinations/*.js"],
        strict: true,
    },
======================================================howe========
import { Given } from 'cucumber';
import { browser, by, element } from 'protractor';

Given('I hover over the {string} element', async function (elementName: string) {
  const elem = element(by.css(elementName));
  await browser.actions().mouseMove(elem).perform();
});
=============================================================Assertions chai=====================
expect,should,assert
ac=browseer.getTitle()
expect(ac).to.eventually.equal(title);
console
$$('title')
==============================================
browser.get(url)
browseer.getTitle()
browser.waitForAngularEnabled(false);
browser.manage().window().maximize();
browser.manage().timeouts().implicitlyWait(3000);
setDefaultTimeout(60 * 1000);
browser.actions().mouseMove(paget2.mousemovsec).perform();
=============================================================
        tags:"@login or @addmember or @addprogram or @addcareteam or @addtask",
Protractor C:\Users\ur788\Desktop\tsex\jsfiles\conf.js --cucumberOpts.tags="@login or @addmember or @addprogram or @addcareteam or @addtask" 
====================================Report==================================
html report
.\node_modules\.bin\cucumber-js --format=json: cucumber_report.json 
run --> node index.js
npm run cuke
================
create json file directory
create cucumber opts
generte json report with cucumber opts
ncu -u for update
npm install
==================================
var rows=dataTable.rowsHash();//vertical data table
  console.log(rows.username);
  console.log(rows.password);
  console.log((rows.address));

 const data = table.hashes();//horizontal datatable
  const data1 = data[0];
  await paget.fname.sendKeys(data1.fname);
===========================================
  expect(array).to.be.null,JSON.stringify(array);
import { config } from 'chai';

// Set the truncateThreshold option to false
config.truncateThreshold = 0;
=============================================
After(async function (scenario) {
    if (scenario.result.status === Status.FAILED) {
      const screenshot = await browser.takeScreenshot();
      this.attach(screenshot, 'image/png');
    }
  });
